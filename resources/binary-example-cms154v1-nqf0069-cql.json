{
          "resourceType": "Binary",
          "id": "binary-example-cms154v1-nqf0069-cql",
          "contentType": "text/cql",
          "data": "bGlicmFyeSBDTVMxNTQgdmVyc2lvbiAnMScNCg0KLyoNCglDTVMxNTR2MSAtIE5RRjAwNjkNCglBcHByb3ByaWF0ZSBUcmVhdG1lbnQgZm9yIENoaWxkcmVuIHdpdGggVXBwZXIgUmVzcGlyYXRvcnkgSW5mZWN0aW9uIChVUkkpDQoNClBvcHVsYXRpb24gY3JpdGVyaWENCg0KICAgIEluaXRpYWwgUGF0aWVudCBQb3B1bGF0aW9uID0NCiAgICAgICAgQU5EOiAiUGF0aWVudCBDaGFyYWN0ZXJpc3RpYyBCaXJ0aGRhdGU6IGJpcnRoIGRhdGUiID49IDMgbW9udGgocykgc3RhcnRzIGJlZm9yZSBzdGFydCBvZiAiTWVhc3VyZW1lbnQgUGVyaW9kIg0KICAgICAgICBBTkQ6ICJQYXRpZW50IENoYXJhY3RlcmlzdGljIEJpcnRoZGF0ZTogYmlydGggZGF0ZSIgPD0gMTggeWVhcihzKSBzdGFydHMgYmVmb3JlIHN0YXJ0IG9mICJNZWFzdXJlbWVudCBQZXJpb2QiDQogICAgICAgIEFORDoNCiAgICAgICAgICAgIE9SOiAiT2NjdXJyZW5jZSBBIG9mIERpYWdub3NpcywgQWN0aXZlOiBVcHBlciBSZXNwaXJhdG9yeSBJbmZlY3Rpb24iIHN0YXJ0cyBkdXJpbmcNCiAgICAgICAgICAgICAgICBPUjogIkVuY291bnRlciwgUGVyZm9ybWVkOiBPZmZpY2UgVmlzaXQiDQogICAgICAgICAgICAgICAgT1I6ICJFbmNvdW50ZXIsIFBlcmZvcm1lZDogRW1lcmdlbmN5IERlcGFydG1lbnQgVmlzaXQiDQogICAgICAgICAgICAgICAgT1I6ICJFbmNvdW50ZXIsIFBlcmZvcm1lZDogUHJldmVudGl2ZSBDYXJlLSBJbml0aWFsIE9mZmljZSBWaXNpdCwgMCB0byAxNyINCiAgICAgICAgICAgICAgICBPUjogIkVuY291bnRlciwgUGVyZm9ybWVkOiBQcmV2ZW50aXZlIENhcmUgLSBFc3RhYmxpc2hlZCBPZmZpY2UgVmlzaXQsIDAgdG8gMTciDQogICAgICAgICAgICAgICAgT1I6ICJFbmNvdW50ZXIsIFBlcmZvcm1lZDogSG9zcGl0YWwgT2JzZXJ2YXRpb24gQ2FyZSAtIEluaXRpYWwiDQogICAgICAgICAgICAgICAgT1I6ICJFbmNvdW50ZXIsIFBlcmZvcm1lZDogRmFjZS10by1GYWNlIEludGVyYWN0aW9uIg0KICAgICAgICAgICAgICAgIGR1cmluZyAiTWVhc3VyZW1lbnQgUGVyaW9kIg0KICAgICAgICAgICAgT1I6DQogICAgICAgICAgICAgICAgT1I6ICJFbmNvdW50ZXIsIFBlcmZvcm1lZDogT2ZmaWNlIFZpc2l0Ig0KICAgICAgICAgICAgICAgIE9SOiAiRW5jb3VudGVyLCBQZXJmb3JtZWQ6IEVtZXJnZW5jeSBEZXBhcnRtZW50IFZpc2l0Ig0KICAgICAgICAgICAgICAgIE9SOiAiRW5jb3VudGVyLCBQZXJmb3JtZWQ6IFByZXZlbnRpdmUgQ2FyZS0gSW5pdGlhbCBPZmZpY2UgVmlzaXQsIDAgdG8gMTciDQogICAgICAgICAgICAgICAgT1I6ICJFbmNvdW50ZXIsIFBlcmZvcm1lZDogUHJldmVudGl2ZSBDYXJlIC0gRXN0YWJsaXNoZWQgT2ZmaWNlIFZpc2l0LCAwIHRvIDE3Ig0KICAgICAgICAgICAgICAgIE9SOiAiRW5jb3VudGVyLCBQZXJmb3JtZWQ6IEhvc3BpdGFsIE9ic2VydmF0aW9uIENhcmUgLSBJbml0aWFsIg0KICAgICAgICAgICAgICAgIE9SOiAiRW5jb3VudGVyLCBQZXJmb3JtZWQ6IEZhY2UtdG8tRmFjZSBJbnRlcmFjdGlvbiINCiAgICAgICAgICAgICAgICBkdXJpbmcgKCJPY2N1cnJlbmNlIEEgb2YgRGlhZ25vc2lzLCBBY3RpdmU6IFVwcGVyIFJlc3BpcmF0b3J5IEluZmVjdGlvbiIgZHVyaW5nICJNZWFzdXJlbWVudCBQZXJpb2QiKQ0KICAgIERlbm9taW5hdG9yID0NCiAgICAgICAgQU5EOiAiSW5pdGlhbCBQYXRpZW50IFBvcHVsYXRpb24iDQogICAgRGVub21pbmF0b3IgRXhjbHVzaW9ucyA9DQogICAgICAgIEFORDoNCiAgICAgICAgICAgIE9SOiAiRGlhZ25vc2lzLCBBY3RpdmU6IENvbXBldGluZyBDb25kaXRpb25zIGZvciBSZXNwaXJhdG9yeSBDb25kaXRpb25zIiA8PSAzIGRheShzKSBzdGFydHMgYWZ0ZXIgc3RhcnQgb2YgIk9jY3VycmVuY2UgQSBvZiBEaWFnbm9zaXMsIEFjdGl2ZTogVXBwZXIgUmVzcGlyYXRvcnkgSW5mZWN0aW9uIg0KICAgICAgICAgICAgT1I6ICJNZWRpY2F0aW9uLCBBY3RpdmU6IEFudGliaW90aWMgTWVkaWNhdGlvbnMiIDw9IDMwIGRheShzKSBzdGFydHMgYmVmb3JlIG9yIGR1cmluZyAiT2NjdXJyZW5jZSBBIG9mIERpYWdub3NpcywgQWN0aXZlOiBVcHBlciBSZXNwaXJhdG9yeSBJbmZlY3Rpb24iDQogICAgTnVtZXJhdG9yID0NCiAgICAgICAgQU5EIE5PVDogIk1lZGljYXRpb24sIE9yZGVyOiBBbnRpYmlvdGljIE1lZGljYXRpb25zIiA8PSAzIGRheShzKSBzdGFydHMgYWZ0ZXIgc3RhcnQgb2YgIk9jY3VycmVuY2UgQSBvZiBEaWFnbm9zaXMsIEFjdGl2ZTogVXBwZXIgUmVzcGlyYXRvcnkgSW5mZWN0aW9uIg0KICAgIERlbm9taW5hdG9yIEV4Y2VwdGlvbnMgPQ0KICAgICAgICBOb25lDQoNCkRhdGEgY3JpdGVyaWEgKFFETSBEYXRhIEVsZW1lbnRzKQ0KDQogICAgIkRpYWdub3NpcywgQWN0aXZlOiBDb21wZXRpbmcgQ29uZGl0aW9ucyBmb3IgUmVzcGlyYXRvcnkgQ29uZGl0aW9ucyIgdXNpbmcgIkNvbXBldGluZyBDb25kaXRpb25zIGZvciBSZXNwaXJhdG9yeSBDb25kaXRpb25zIEdyb3VwaW5nIFZhbHVlIFNldCAoMi4xNi44NDAuMS4xMTM4ODMuMy40NjQuMTAwMy4xMDIuMTIuMTAxNykiDQogICAgIkRpYWdub3NpcywgQWN0aXZlOiBVcHBlciBSZXNwaXJhdG9yeSBJbmZlY3Rpb24iIHVzaW5nICJVcHBlciBSZXNwaXJhdG9yeSBJbmZlY3Rpb24gR3JvdXBpbmcgVmFsdWUgU2V0ICgyLjE2Ljg0MC4xLjExMzg4My4zLjQ2NC4xMDAzLjEwMi4xMi4xMDIyKSINCiAgICAiRW5jb3VudGVyLCBQZXJmb3JtZWQ6IEVtZXJnZW5jeSBEZXBhcnRtZW50IFZpc2l0IiB1c2luZyAiRW1lcmdlbmN5IERlcGFydG1lbnQgVmlzaXQgR3JvdXBpbmcgVmFsdWUgU2V0ICgyLjE2Ljg0MC4xLjExMzg4My4zLjQ2NC4xMDAzLjEwMS4xMi4xMDEwKSINCiAgICAiRW5jb3VudGVyLCBQZXJmb3JtZWQ6IEZhY2UtdG8tRmFjZSBJbnRlcmFjdGlvbiIgdXNpbmcgIkZhY2UtdG8tRmFjZSBJbnRlcmFjdGlvbiBHcm91cGluZyBWYWx1ZSBTZXQgKDIuMTYuODQwLjEuMTEzODgzLjMuNDY0LjEwMDMuMTAxLjEyLjEwNDgpIg0KICAgICJFbmNvdW50ZXIsIFBlcmZvcm1lZDogSG9zcGl0YWwgT2JzZXJ2YXRpb24gQ2FyZSAtIEluaXRpYWwiIHVzaW5nICJIb3NwaXRhbCBPYnNlcnZhdGlvbiBDYXJlIC0gSW5pdGlhbCBHcm91cGluZyBWYWx1ZSBTZXQgKDIuMTYuODQwLjEuMTEzODgzLjMuNDY0LjEwMDMuMTAxLjEyLjEwMDIpIg0KICAgICJFbmNvdW50ZXIsIFBlcmZvcm1lZDogT2ZmaWNlIFZpc2l0IiB1c2luZyAiT2ZmaWNlIFZpc2l0IEdyb3VwaW5nIFZhbHVlIFNldCAoMi4xNi44NDAuMS4xMTM4ODMuMy40NjQuMTAwMy4xMDEuMTIuMTAwMSkiDQogICAgIkVuY291bnRlciwgUGVyZm9ybWVkOiBQcmV2ZW50aXZlIENhcmUgLSBFc3RhYmxpc2hlZCBPZmZpY2UgVmlzaXQsIDAgdG8gMTciIHVzaW5nICJQcmV2ZW50aXZlIENhcmUgLSBFc3RhYmxpc2hlZCBPZmZpY2UgVmlzaXQsIDAgdG8gMTcgR3JvdXBpbmcgVmFsdWUgU2V0ICgyLjE2Ljg0MC4xLjExMzg4My4zLjQ2NC4xMDAzLjEwMS4xMi4xMDI0KSINCiAgICAiRW5jb3VudGVyLCBQZXJmb3JtZWQ6IFByZXZlbnRpdmUgQ2FyZS0gSW5pdGlhbCBPZmZpY2UgVmlzaXQsIDAgdG8gMTciIHVzaW5nICJQcmV2ZW50aXZlIENhcmUtIEluaXRpYWwgT2ZmaWNlIFZpc2l0LCAwIHRvIDE3IEdyb3VwaW5nIFZhbHVlIFNldCAoMi4xNi44NDAuMS4xMTM4ODMuMy40NjQuMTAwMy4xMDEuMTIuMTAyMikiDQogICAgIk1lZGljYXRpb24sIEFjdGl2ZTogQW50aWJpb3RpYyBNZWRpY2F0aW9ucyIgdXNpbmcgIkFudGliaW90aWMgTWVkaWNhdGlvbnMgR3JvdXBpbmcgVmFsdWUgU2V0ICgyLjE2Ljg0MC4xLjExMzg4My4zLjQ2NC4xMDAzLjE5Ni4xMi4xMDAxKSINCiAgICAiTWVkaWNhdGlvbiwgT3JkZXI6IEFudGliaW90aWMgTWVkaWNhdGlvbnMiIHVzaW5nICJBbnRpYmlvdGljIE1lZGljYXRpb25zIEdyb3VwaW5nIFZhbHVlIFNldCAoMi4xNi44NDAuMS4xMTM4ODMuMy40NjQuMTAwMy4xOTYuMTIuMTAwMSkiDQogICAgIlBhdGllbnQgQ2hhcmFjdGVyaXN0aWMgQmlydGhkYXRlOiBiaXJ0aCBkYXRlIiB1c2luZyAiYmlydGggZGF0ZSBMT0lOQyBWYWx1ZSBTZXQgKDIuMTYuODQwLjEuMTEzODgzLjMuNTYwLjEwMC40KSINCg0KUmVwb3J0aW5nIFN0cmF0aWZpY2F0aW9uDQoNCiAgICBOb25lDQoNClN1cHBsZW1lbnRhbCBEYXRhIEVsZW1lbnRzDQoNCiAgICAiUGF0aWVudCBDaGFyYWN0ZXJpc3RpYyBFdGhuaWNpdHk6IEV0aG5pY2l0eSIgdXNpbmcgIkV0aG5pY2l0eSBDREMgVmFsdWUgU2V0ICgyLjE2Ljg0MC4xLjExNDIyMi40LjExLjgzNykiDQogICAgIlBhdGllbnQgQ2hhcmFjdGVyaXN0aWMgUGF5ZXI6IFBheWVyIiB1c2luZyAiUGF5ZXIgU291cmNlIG9mIFBheW1lbnQgVHlwb2xvZ3kgVmFsdWUgU2V0ICgyLjE2Ljg0MC4xLjExNDIyMi40LjExLjM1OTEpIg0KICAgICJQYXRpZW50IENoYXJhY3RlcmlzdGljIFJhY2U6IFJhY2UiIHVzaW5nICJSYWNlIENEQyBWYWx1ZSBTZXQgKDIuMTYuODQwLjEuMTE0MjIyLjQuMTEuODM2KSINCiAgICAiUGF0aWVudCBDaGFyYWN0ZXJpc3RpYyBTZXg6IE9OQyBBZG1pbmlzdHJhdGl2ZSBTZXgiIHVzaW5nICJPTkMgQWRtaW5pc3RyYXRpdmUgU2V4IEFkbWluaXN0cmF0aXZlIFNleCBWYWx1ZSBTZXQgKDIuMTYuODQwLjEuMTEzNzYyLjEuNC4xKSINCg0KLy8gVGhpcyBpcyBhbiBlcGlzb2RlLW9mLWNhcmUgbWVhc3VyZSwgbWVhbmluZyB0aGF0IGVhY2ggcGF0aWVudCBtYXkgY29udHJpYnV0ZSBtdWx0aXBsZSBlcGlzb2RlcywgcmF0aGVyIHRoYW4ganVzdCAxLi4uDQovLyBOZWVkIHRvIG1ha2Ugc3VyZSB3ZSBjYW4gaGFuZGxlIHRoaXMgY29ycmVjdGx5IHdpdGhpbiBDUUwNCg0KKi8NCg0KdXNpbmcgUVVJQ0sNCg0KdmFsdWVzZXQgIkNvbXBldGluZyBDb25kaXRpb25zIGZvciBSZXNwaXJhdG9yeSBDb25kaXRpb25zIjogJzIuMTYuODQwLjEuMTEzODgzLjMuNDY0LjEwMDMuMTAyLjEyLjEwMTcnDQp2YWx1ZXNldCAiVXBwZXIgUmVzcGlyYXRvcnkgSW5mZWN0aW9uIjogJzIuMTYuODQwLjEuMTEzODgzLjMuNDY0LjEwMDMuMTAyLjEyLjEwMjInDQp2YWx1ZXNldCAiRW1lcmdlbmN5IERlcGFydG1lbnQgVmlzaXQiOiAnMi4xNi44NDAuMS4xMTM4ODMuMy40NjQuMTAwMy4xMDEuMTIuMTAxMCcNCnZhbHVlc2V0ICJGYWNlLXRvLUZhY2UgSW50ZXJhY3Rpb24iOiAnMi4xNi44NDAuMS4xMTM4ODMuMy40NjQuMTAwMy4xMDEuMTIuMTA0OCcNCnZhbHVlc2V0ICJIb3NwaXRhbCBPYnNlcnZhdGlvbiBDYXJlIC0gSW5pdGlhbCI6ICcyLjE2Ljg0MC4xLjExMzg4My4zLjQ2NC4xMDAzLjEwMS4xMi4xMDAyJw0KdmFsdWVzZXQgIk9mZmljZSBWaXNpdCI6ICcyLjE2Ljg0MC4xLjExMzg4My4zLjQ2NC4xMDAzLjEwMS4xMi4xMDAxJw0KdmFsdWVzZXQgIlByZXZlbnRpdmUgQ2FyZSAtIEVzdGFibGlzaGVkIE9mZmljZSBWaXNpdCwgMCB0byAxNyI6ICcyLjE2Ljg0MC4xLjExMzg4My4zLjQ2NC4xMDAzLjEwMS4xMi4xMDI0Jw0KdmFsdWVzZXQgIlByZXZlbnRpdmUgQ2FyZS0gSW5pdGlhbCBPZmZpY2UgVmlzaXQsIDAgdG8gMTciOiAnMi4xNi44NDAuMS4xMTM4ODMuMy40NjQuMTAwMy4xMDEuMTIuMTAyMicNCnZhbHVlc2V0ICJBbnRpYmlvdGljIE1lZGljYXRpb25zIjogJzIuMTYuODQwLjEuMTEzODgzLjMuNDY0LjEwMDMuMTk2LjEyLjEwMDEnDQoNCnBhcmFtZXRlciBNZWFzdXJlbWVudFBlcmlvZCBkZWZhdWx0IEludGVydmFsW0RhdGVUaW1lKDIwMTMsIDEsIDEsIDAsIDAsIDAsIDApLCBEYXRlVGltZSgyMDE0LCAxLCAxLCAwLCAwLCAwLCAwKSkNCg0KY29udGV4dCBQYXRpZW50DQoNCmRlZmluZSAiSW5EZW1vZ3JhcGhpYyI6DQogICAgQWdlSW5Nb250aHNBdChzdGFydCBvZiBNZWFzdXJlbWVudFBlcmlvZCkgPj0gMw0KICAgICAgICBhbmQgQWdlSW5ZZWFyc0F0KHN0YXJ0IG9mIE1lYXN1cmVtZW50UGVyaW9kKSA8PSAxOA0KDQpkZWZpbmUgIlZhbGlkRW5jb3VudGVycyI6DQoJWyJFbmNvdW50ZXIiOiAiT2ZmaWNlIFZpc2l0Il0NCgkJdW5pb24gWyJFbmNvdW50ZXIiOiAiRW1lcmdlbmN5IERlcGFydG1lbnQgVmlzaXQiXQ0KCQl1bmlvbiBbIkVuY291bnRlciI6ICJQcmV2ZW50aXZlIENhcmUtIEluaXRpYWwgT2ZmaWNlIFZpc2l0LCAwIHRvIDE3Il0NCgkJdW5pb24gWyJFbmNvdW50ZXIiOiAiUHJldmVudGl2ZSBDYXJlIC0gRXN0YWJsaXNoZWQgT2ZmaWNlIFZpc2l0LCAwIHRvIDE3Il0NCgkJdW5pb24gWyJFbmNvdW50ZXIiOiAiSG9zcGl0YWwgT2JzZXJ2YXRpb24gQ2FyZSAtIEluaXRpYWwiXQ0KCQl1bmlvbiBbIkVuY291bnRlciI6ICJGYWNlLXRvLUZhY2UgSW50ZXJhY3Rpb24iXQ0KDQpkZWZpbmUgIkVuY291bnRlcnNEdXJpbmdNZWFzdXJlbWVudFBlcmlvZCI6DQoJIlZhbGlkRW5jb3VudGVycyIgRSB3aGVyZSBFLiJwZXJpb2QiIGR1cmluZyBNZWFzdXJlbWVudFBlcmlvZA0KDQpkZWZpbmUgIlVSSURpYWdub3NpcyI6DQoJWyJDb25kaXRpb24iOiAiVXBwZXIgUmVzcGlyYXRvcnkgSW5mZWN0aW9uIl0NCg0KZGVmaW5lICJWYWxpZERpYWdub3NpcyI6DQoJIlVSSURpYWdub3NpcyIgVQ0KCQl3aGVyZSBleGlzdHMgKCJFbmNvdW50ZXJzRHVyaW5nTWVhc3VyZW1lbnRQZXJpb2QiIEUgd2hlcmUgVS4ib25zZXREYXRlVGltZSIgZHVyaW5nIEUuInBlcmlvZCIpDQoJCQlvciBleGlzdHMgKCJWYWxpZEVuY291bnRlcnMiIEUgd2hlcmUgSW50ZXJ2YWxbVS4ib25zZXREYXRlVGltZSIsIFUuImFiYXRlbWVudERhdGUiXSBpbmNsdWRlcyBFLiJwZXJpb2QiKQ0KDQpkZWZpbmUgIkluaXRpYWxQb3B1bGF0aW9uIjoNCgkiVmFsaWREaWFnbm9zaXMiIFYNCgkJd2hlcmUgIkluRGVtb2dyYXBoaWMiDQoNCmRlZmluZSAiRGVub21pbmF0b3IiOg0KCXRydWUNCg0KZGVmaW5lICJOdW1lcmF0b3IiOg0KCSJWYWxpZERpYWdub3NpcyIgViB3aGVyZSBub3QgZXhpc3RzIChbIk1lZGljYXRpb25QcmVzY3JpcHRpb24iOiAiQW50aWJpb3RpYyBNZWRpY2F0aW9ucyJdIE0gd2hlcmUgTS4iZGF0ZVdyaXR0ZW4iIG9jY3VycyAzIGRheXMgb3IgbGVzcyBhZnRlciBWLiJvbnNldERhdGVUaW1lIikNCg0KY29udGV4dCBQb3B1bGF0aW9uDQoNCmRlZmluZSAiTWVhc3VyZVNjb3JlIjogKENvdW50KCJOdW1lcmF0b3IiKSAvIENvdW50KCJEZW5vbWluYXRvciIpKSAqIDEwMA0K"
		}